import groovy.io.FileType

def findPath = { value ->
    def tokens = value.split()
    for (token in tokens) {
        def file = new File(token);
        if (file.exists())
            return file
    }
}

def dir = new File("src/main")
def templateFiles = []
dir.eachFileRecurse (FileType.FILES) { file ->
    if (file.name.endsWith(".motionprofile.json"))
    {
        templateFiles << file
        
        def compileTemplateTask = task "MotionProfileTemplate${file.name.capitalize()}"(type: Exec) {
            def deployDir = "${projectDir}/src/main/deploy"

            // TODO: Make this work for OSX + Linux (current windows only)
            workingDir './node_modules/.bin/'
            commandLine 'cmd', '/c', "pathfinder-template-cli.cmd --mp ${file.absolutePath} -o ${deployDir}"
            standardOutput = new ByteArrayOutputStream()

            inputs.file file
            outputs.file "None"
            
            doLast {
                def target = findPath(standardOutput.toString())

                println "Compiled motion profile: ${file.absolutePath}"
                println "To target trajectory:    ${target}"
            }
        }

        build.finalizedBy(compileTemplateTask)
    }
}

println "Found ${templateFiles.size()} motion profile templates."
for (templateFile in templateFiles) {
    println "\t${templateFile.name}"
}
